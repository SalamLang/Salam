name: "Create / Update Labels (maintainer-trigger)"

on:
  workflow_dispatch: {}

permissions:
  issues: write
  contents: read

jobs:
  create-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Create or update labels
        uses: actions/github-script@v6
        with:
          script: |
            // List of labels to create/update
            const labels = [
              // AREA
              { name: "area/config", color: "0e8a16", description: "Config files & repo configuration" },
              { name: "area/docs", color: "006b75", description: "Docs, README, changelogs" },
              { name: "area/examples", color: "bf68dd", description: "Examples and sample code" },
              { name: "area/source", color: "d93f0b", description: "Core source code" },
              { name: "area/compiler", color: "b60205", description: "Compiler-specific code" },
              { name: "area/parser", color: "d4c5f9", description: "Parser related changes" },
              { name: "area/interpreter", color: "cfd3d7", description: "Interpreter related changes" },
              { name: "area/scripts", color: "8c8c8c", description: "Scripts and CI tooling" },
              { name: "area/repo", color: "8a8a8a", description: "Repo metadata (license, gitignore)" },

              // LANG
              { name: "lang/c-cpp", color: "555555", description: "C/C++ code" },
              { name: "lang/rust", color: "dea584", description: "Rust code" },
              { name: "lang/python", color: "3572A5", description: "Python code" },
              { name: "lang/javascript", color: "f1e05a", description: "JS/TS code" },
              { name: "lang/go", color: "00ADD8", description: "Go code" },
              { name: "lang/shell", color: "89e051", description: "Shell scripts" },

              // TYPE
              { name: "type/bug", color: "d73a4a", description: "Bug fixes" },
              { name: "type/feature", color: "0e8a16", description: "New features" },
              { name: "type/refactor", color: "a2eeef", description: "Refactors" },
              { name: "type/documentation", color: "0075ca", description: "Documentation changes" },
              { name: "type/tests", color: "c2e0c6", description: "Test changes" },
              { name: "type/chore", color: "fbca04", description: "Chore / maintenance" },
              { name: "type/perf", color: "f9d0c4", description: "Performance work" },

              // INFRA / TOOLS
              { name: "infra/ci", color: "1d76db", description: "CI/workflow changes" },
              { name: "infra/docker", color: "0e8a16", description: "Docker and container" },
              { name: "infra/build", color: "b60205", description: "Build & makefiles" },
              { name: "deps", color: "0e8a16", description: "Dependency or lockfile updates" },
              { name: "security", color: "e11d21", description: "Security fixes or policies" },

              { name: "tooling/linter", color: "a2a2a2", description: "Linter config changes" },
              { name: "tooling/formatter", color: "a2a2a2", description: "Formatter config changes" },

              // PRIORITY
              { name: "priority/high", color: "b60205", description: "High priority area" },
              { name: "priority/critical", color: "8b0000", description: "Critical priority" },

              // SIZE
              { name: "size/XS", color: "9ea7b8", description: "Tiny change (1-5 files)" },
              { name: "size/S", color: "6c8090", description: "Small change (6-15 files)" },
              { name: "size/M", color: "4b6470", description: "Medium (16-50 files)" },
              { name: "size/L", color: "355050", description: "Large (51-100 files)" },
              { name: "size/XL", color: "122233", description: "Very large (100+ files)" }
            ];

            for (const lbl of labels) {
              try {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: lbl.name,
                  color: lbl.color,
                  description: lbl.description
                });
                core.info(`Created label: ${lbl.name}`);
              } catch (err) {
                // if label exists, update it
                if (err.status === 422 || err.message && err.message.includes("already exists")) {
                  try {
                    await github.rest.issues.updateLabel({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      name: lbl.name,
                      new_name: lbl.name,
                      color: lbl.color,
                      description: lbl.description
                    });
                    core.info(`Updated label: ${lbl.name}`);
                  } catch (uerr) {
                    core.warning(`Failed to update label ${lbl.name}: ${uerr}`);
                  }
                } else {
                  core.warning(`Failed to create label ${lbl.name}: ${err}`);
                }
              }
            }

            core.info("Labels creation/updating complete.");
